## SpringBoot 工作机制

### 1. @SpringBootApplication 背后的秘密

- 一个复合 Annotation
	
	- @Configuration
	
	- @EnableAutoConfiguration
	
	- @ComponentScan

- @Configuration，表明其本身是一个 IoC 容器的配置类

- @EnableAutoConfiguration：借助 @Import 将所有符合自动配置条件的 bean 定义加载到 IoC 容器中

	- @Import(EnableAutoConfigurationImportSelector.class)

	- 借助 EnableAutoConfigurationImportSelector，@EnableAutoConfiguration 可以帮助 SpringBoot 应用将所有符合条件的 @Configuration 配置都加载到当前 SpringBoot 创建并使用的 IoC 容器

	- 借助于 Spring 原有的一个工具类：SpringFacotriesLoader 的支持，@EnableAutoConfiguration 的自动配置功能才能起作用

#### __1.1 自动配置的幕后英雄：SpringFactoriesLoader详解__

- 从 classpath 中搜寻所有 META-INF/spring.factories 配置文件

- 将其中 org.springframework.boot.autoconfigure.EnableAutoConfiguration 对应的配置项通过反射实例化到对应的标注了 @Configuration 的 JavaConfig 形式的 IoC 容器配置类

- 汇总一并加载到 IoC 容器中

#### __1.2 SpringApplication 执行流程__

##### 创建 SpringApplication 实例


